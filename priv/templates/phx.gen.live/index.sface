<header>
  Listing <%= schema.human_plural %>
  <footer>
    <.link href={~p"<%= schema.route_prefix %>/new"}>
      <button>New <%= schema.human_singular %></button>
    </.link>
  </footer>
</header>

<section>
  <Table id="<%= schema.singular %>_table"
    stream
    data={{id, <%= schema.singular %>} <- @streams.<%= schema.collection %>}
  ><%= for {k, _} <- schema.attrs do %>
    <Column label="<%= Phoenix.Naming.humanize(Atom.to_string(k)) %>">{ <%= schema.singular %>.<%= k %> }</Column><% end %>
    <Column label="">
      <Context put={<%= inspect context.web_module %>.<%= inspect Module.concat(schema.web_namespace, schema.alias) %>Live.<%= inspect(schema.alias) %>Component, presentation: :list}>
        <div id={id}>
          <<%= inspect context.web_module %>.<%= inspect Module.concat(schema.web_namespace, schema.alias) %>Live.<%= inspect(schema.alias) %>Component
            {=<%= schema.singular %>}
            {=id}>
            <:buttons>
              <.link patch={~p"<%= schema.route_prefix %>/#{<%= schema.singular %>.id}/edit"}>Edit</.link>
              <.link to={~p"<%= schema.route_prefix %>/#{<%= schema.singular %>.id}"}>Show</.link>
            </:buttons>
          </<%= inspect context.web_module %>.<%= inspect Module.concat(schema.web_namespace, schema.alias) %>Live.<%= inspect(schema.alias) %>Component>
        </div>
      </Context>
    </Column>
  </Table>
</section>

<Modal :if={@live_action in [:new, :edit]} id="<%= schema.singular %>-modal" show on_cancel={JS.patch(~p"<%= schema.route_prefix %>")}>
  <<%= inspect context.web_module %>.<%= inspect Module.concat(schema.web_namespace, schema.alias) %>Live.<%= inspect(schema.alias) %>Component
    {=@<%= schema.singular %>}
    id={@<%= schema.singular %>.id || :new}
    title={@page_title}
    action={@live_action}<%= for assoc <- Punkix.Context.required_assocs(schema) do %>
    {=@<%= assoc.plural %>}<% end %>
  />
</Modal>
