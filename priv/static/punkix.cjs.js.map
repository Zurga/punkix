{
  "version": 3,
  "sources": ["../../assets/js/punkix/index.js", "../../assets/js/_hooks/Punkix.Web.Components.InteractionRecorder.hooks.js", "../../assets/js/_hooks/index.js"],
  "sourcesContent": ["import PunkixHooks from \"../_hooks\";\n\n/**\n * Controls `<details>` state on the client when LiveView updates the DOM.\n *\n * ---\n *\n * Inspired and derived from\n * - https://github.com/phoenixframework/phoenix_live_view/issues/2349#issuecomment-1430720906\n * - https://github.com/phoenixframework/phoenix_live_view/issues/2349#issuecomment-2164802079\n *\n * and https://elixirforum.com/t/dont-collapse-details/54278\n *\n * @param {HTMLElement} fromEl\n * @param {HTMLElement} toEl\n */\nfunction preserveDetailsOpenState(fromEl, toEl) {\n\tif (\n\t\t!(fromEl instanceof HTMLDetailsElement) ||\n\t\t!(toEl instanceof HTMLDetailsElement)\n\t) {\n\t\treturn\n\t}\n\n\ttoEl.open = fromEl.open\n}\n\nexport {preserveDetailsOpenState, PunkixHooks};\n", "/*\nThis file was generated by the Surface compiler.\n*/\n\nconst TARGET_FRAME = \"iframe#target\";\nexport default {\n  mounted() {\n    const csrfToken = document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\");\n\n    let interactions = [];\n    let recordingName = null;\n\n    const sendRecording = (data) => {\n      if (isRecording && data.interactions.length !== 0) {\n        console.log(\"sending\", data)\n        (\"/test/store_interactions\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"X-CSRF-Token\": csrfToken\n          },\n          body: JSON.stringify(data)\n        });\n      }\n    };\n\n    const getSelector = (element) => {\n      if (element.id && !element.id.startsWith(\"phx-\")) {\n        return `#${element.id}`;\n      }\n      let path = [];\n      while (!element.id.startsWith(\"phx-\")) {\n        let tag = element.tagName.toLowerCase();\n        let sibling = element;\n        let nth = 1;\n        while (sibling = sibling.previousElementSibling) {\n          if (sibling.tagName.toLowerCase() === tag) nth++;\n        }\n        path.unshift(`${tag}:nth-of-type(${nth})`);\n        element = element.parentNode;\n      }\n      return path.join(\" > \");\n    };\n\n    const findParentForm = (element) => {\n      let parent = element.parentNode\n      while (parent.tagName !== \"FORM\") {\n        parent = parent.parentNode;\n      }\n      return parent.id\n    }\n\n    const recordInteraction = (interaction) => {\n      this.pushEventTo(this.el, \"record-interaction\", {name: recordingName, interaction: interaction});\n    };\n\n    const recordClick = (event) => {\n      let target = event.target;\n      let selector = getSelector(target);\n      if (selector) {\n        let interaction = {\n          type: \"click\",\n          selector: selector,\n          timestamp: Date.now()\n        };\n        recordInteraction(interaction);\n      }\n    };\n\n    const recordInput = (event) => {\n      let target = event.target;\n      let selector = getSelector(target);\n      console.log(event)\n      if (selector) {\n        let interaction = {\n          type: \"input\",\n          selector: selector,\n          name: target.name,\n          form: findParentForm(target),\n          value: target.value,\n          timestamp: Date.now()\n        };\n        recordInteraction(interaction);\n      }\n    };\n     const recordTextAssertion = (event) => {\n      if (isRecording) {\n        event.preventDefault(); // Prevent the context menu from appearing\n        let target = event.target;\n        console.log(target)\n        let selector = getSelector(target);\n        if (selector) {\n          let interaction = {\n            type: \"assert_text\",\n            selector: selector,\n            text: target.textContent.trim(),\n            timestamp: Date.now()\n          };\n          recordInteraction(interaction);\n        }\n      }\n    };\n    const hasTextContent = (element) => {\n      return !!element.text?.trim();\n    };\n\n    let isRecording = false;\n    const inputElements = \"input\"\n    const clickElements = \"button, a, input[type='checkbox']\"\n\n    const applyListeners = (element) => {\n      console.log(element.querySelectorAll(clickElements))\n      element.querySelectorAll(inputElements).forEach((input) => {\n        input.addEventListener(\"input\", recordInput);\n      });\n      element.querySelectorAll(clickElements).forEach((clickable) => {\n        clickable.addEventListener(\"click\", recordClick);\n      });\n      element.querySelectorAll(\"*\").forEach((el) => {\n        if (hasTextContent(el)) {\n          el.addEventListener(\"contextmenu\", recordTextAssertion, true);\n        }\n      });\n     };\n\n    const removeListeners = (element) => {\n      element.querySelectorAll(inputElements).forEach((input) => {\n        input.removeEventListener(\"input\", recordInput);\n      });\n      element.querySelectorAll(clickElements).forEach((clickable) => {\n        clickable.removeEventListener(\"click\", recordClick);\n      });\n      element.querySelectorAll(\"*\").forEach((el) => {\n        if (hasTextContent(el)) {\n          console.log(el)\n          console.log(el.removeEventListener(\"contextmenu\", recordTextAssertion, true));\n        }\n      });\n     };\n\n    window.addEventListener(\"phx:redirect\", (e) => {\n      console.log(e)\n    })\n\n\n    window.addEventListener(\"phx:start-recording\", (e) => {\n      const isRecording = true;\n      const recordingName = e.detail.module + Date.now().toString();\n      const frame = document.createElement(\"iframe\");\n      frame.onload = function () {\n        const body = this.contentDocument.body\n        applyListeners(body);\n        observer.observe(body,  {\n          childList: true,\n          subtree: true\n        });\n        interactions = [{\n          type: \"path\",\n          path: e.detail.path,\n          timestamp: Date.now()\n        }];\n      };\n      frame.src = e.detail.path;\n      frame.id = \"target\";\n      document.body.appendChild(frame);\n    });\n\n    window.addEventListener(\"phx:stop-recording\", () => {\n      sendRecording({ name: recordingName, interactions: interactions });\n      const frame = document.querySelector(TARGET_FRAME);\n      observer.disconnect()\n      removeListeners(frame.contentDocument.body);\n      frame.remove();\n      isRecording = false;\n    });\n\n\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        mutation.addedNodes.forEach((node) => {\n          if (node.nodeType === 1) {\n            console.log(node)\n            applyListeners(node);\n          }\n        });\n      });\n    });\n  }\n}\n", "/*\nThis file was generated by the Surface compiler.\n*/\n\nfunction ns(hooks, nameSpace) {\n  const updatedHooks = {}\n  Object.keys(hooks).map(function(key) {\n    updatedHooks[`${nameSpace}#${key}`] = hooks[key]\n  })\n  return updatedHooks\n}\n\nimport * as c1 from \"./Punkix.Web.Components.InteractionRecorder.hooks\"\n\nlet hooks = Object.assign(\n  ns(c1, \"Punkix.Web.Components.InteractionRecorder\")\n)\n\nexport default hooks\n"],
  "mappings": "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",
  "names": []
}
